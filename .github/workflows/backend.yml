name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'alembic/**'
      - 'requirements/**'
      - 'pyproject.toml'
      - 'setup.py'
      - '.github/workflows/backend.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --no-deps -r requirements/core.txt
          pip install --no-deps -r requirements/database.txt
          pip install -r requirements/test.txt
      
      - name: Code Quality
        run: |
          pip install flake8 black
          flake8 .
          black --check .

      - name: Security Scan
        run: |
          pip install bandit safety
          bandit -r .
          safety check

      - name: Run tests with coverage
        run: |
          pip install pytest-cov
          pytest --cov=app --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

      - name: Build wheel
        run: python setup.py bdist_wheel
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/**/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Railway
        run: curl -fsSL https://railway.app/install.sh | sh
      
      - name: Deploy
        run: railway up --detach
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
