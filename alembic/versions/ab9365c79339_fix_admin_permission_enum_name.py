"""fix_admin_permission_enum_name

Revision ID: ab9365c79339
Revises: 2b67abfda255
Create Date: 2025-01-24 22:13:27.923637

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ab9365c79339'
down_revision = '2b67abfda255'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('marketingcampaign',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('target_audience', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('metrics', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('creator_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_marketingcampaign_id'), 'marketingcampaign', ['id'], unique=False)
    op.drop_index('ix_marketing_campaign_id', table_name='marketing_campaign')
    op.drop_table('marketing_campaign')
    op.alter_column('event', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('event', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
    op.alter_column('event', 'location',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('event', 'city',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('event', 'event_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True)
    op.alter_column('event', 'event_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('event', 'status',
               existing_type=postgresql.ENUM('PENDING', 'APPROVED', 'REJECTED', name='eventstatus'),
               nullable=True)
    op.alter_column('event', 'organizer_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index('ix_event_status', table_name='event')
    op.create_index(op.f('ix_event_event_type'), 'event', ['event_type'], unique=False)
    op.drop_column('event', 'created_at')
    op.drop_column('event', 'is_featured')
    op.drop_column('event', 'max_participants')
    op.drop_column('event', 'updated_at')
    op.drop_column('event', 'price')
    op.drop_column('event', 'likes_count')
    op.drop_column('event', 'banner_image_url')
    op.drop_column('event', 'views_count')
    op.alter_column('sponsor', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('sponsor', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_user_admin_level', table_name='user')
    op.drop_index('ix_user_last_active', table_name='user')
    op.drop_index('ix_user_last_login', table_name='user')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_user_last_login', 'user', ['last_login'], unique=False)
    op.create_index('ix_user_last_active', 'user', ['last_active'], unique=False)
    op.create_index('ix_user_admin_level', 'user', ['admin_level'], unique=False)
    op.alter_column('sponsor', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('sponsor', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.add_column('event', sa.Column('views_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('event', sa.Column('banner_image_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('event', sa.Column('likes_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('event', sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('event', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('event', sa.Column('max_participants', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('event', sa.Column('is_featured', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('event', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_event_event_type'), table_name='event')
    op.create_index('ix_event_status', 'event', ['status'], unique=False)
    op.alter_column('event', 'organizer_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('event', 'status',
               existing_type=postgresql.ENUM('PENDING', 'APPROVED', 'REJECTED', name='eventstatus'),
               nullable=False)
    op.alter_column('event', 'event_type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('event', 'event_date',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('event', 'city',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('event', 'location',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('event', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
    op.alter_column('event', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_table('marketing_campaign',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('target_audience', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('metrics', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('creator_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], name='marketing_campaign_creator_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='marketing_campaign_pkey')
    )
    op.create_index('ix_marketing_campaign_id', 'marketing_campaign', ['id'], unique=False)
    op.drop_index(op.f('ix_marketingcampaign_id'), table_name='marketingcampaign')
    op.drop_table('marketingcampaign')
    # ### end Alembic commands ### 